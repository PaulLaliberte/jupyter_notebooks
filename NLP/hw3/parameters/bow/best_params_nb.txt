{'features__transformer_weights': None, 'classifier': MultinomialNB(alpha=0.0001, class_prior=None, fit_prior=True), 'features__counts__lowercase': True, 'features__counts__tokenizer': None, 'features': FeatureUnion(n_jobs=1,
       transformer_list=[('counts', CountVectorizer(analyzer='word', binary=False, decode_error='strict',
        dtype=<class 'numpy.int64'>, encoding='utf-8', input='content',
        lowercase=True, max_df=25, max_features=None, min_df=2,
        ngram_range=(1, 3), preprocessor=None, stop_words=None,
        strip_accents=None, token_pattern='(?u)\\b\\w\\w+\\b',
        tokenizer=None, vocabulary=None))],
       transformer_weights=None), 'steps': [('features', FeatureUnion(n_jobs=1,
       transformer_list=[('counts', CountVectorizer(analyzer='word', binary=False, decode_error='strict',
        dtype=<class 'numpy.int64'>, encoding='utf-8', input='content',
        lowercase=True, max_df=25, max_features=None, min_df=2,
        ngram_range=(1, 3), preprocessor=None, stop_words=None,
        strip_accents=None, token_pattern='(?u)\\b\\w\\w+\\b',
        tokenizer=None, vocabulary=None))],
       transformer_weights=None)), ('classifier', MultinomialNB(alpha=0.0001, class_prior=None, fit_prior=True))], 'features__counts__binary': False, 'memory': None, 'features__n_jobs': 1, 'features__counts__decode_error': 'strict', 'features__counts__max_features': None, 'features__counts__strip_accents': None, 'features__counts__min_df': 2, 'features__counts__vocabulary': None, 'features__counts__max_df': 25, 'classifier__alpha': 0.0001, 'features__counts__encoding': 'utf-8', 'features__counts__input': 'content', 'features__transformer_list': [('counts', CountVectorizer(analyzer='word', binary=False, decode_error='strict',
        dtype=<class 'numpy.int64'>, encoding='utf-8', input='content',
        lowercase=True, max_df=25, max_features=None, min_df=2,
        ngram_range=(1, 3), preprocessor=None, stop_words=None,
        strip_accents=None, token_pattern='(?u)\\b\\w\\w+\\b',
        tokenizer=None, vocabulary=None))], 'features__counts': CountVectorizer(analyzer='word', binary=False, decode_error='strict',
        dtype=<class 'numpy.int64'>, encoding='utf-8', input='content',
        lowercase=True, max_df=25, max_features=None, min_df=2,
        ngram_range=(1, 3), preprocessor=None, stop_words=None,
        strip_accents=None, token_pattern='(?u)\\b\\w\\w+\\b',
        tokenizer=None, vocabulary=None), 'classifier__fit_prior': True, 'features__counts__preprocessor': None, 'features__counts__analyzer': 'word', 'features__counts__ngram_range': (1, 3), 'classifier__class_prior': None, 'features__counts__stop_words': None, 'features__counts__dtype': <class 'numpy.int64'>, 'features__counts__token_pattern': '(?u)\\b\\w\\w+\\b'}