{'classifier__fit_intercept': True, 'features__counts__analyzer': 'word', 'features__counts__norm': 'l2', 'features__n_jobs': 1, 'classifier__class_weight': None, 'features__counts__max_df': 10, 'features': FeatureUnion(n_jobs=1,
       transformer_list=[('counts', Snowball_TfidfVectorizer(analyzer='word', binary=False, decode_error='strict',
             dtype=<class 'numpy.int64'>, encoding='utf-8',
             input='content', lowercase=True, max_df=10, max_features=None,
             min_df=2, ngram_range=(1, 3), norm='l2', pr...se, token_pattern='(?u)\\b\\w\\w+\\b',
             tokenizer=None, use_idf=True, vocabulary=None))],
       transformer_weights=None), 'features__counts__preprocessor': None, 'features__transformer_list': [('counts', Snowball_TfidfVectorizer(analyzer='word', binary=False, decode_error='strict',
             dtype=<class 'numpy.int64'>, encoding='utf-8',
             input='content', lowercase=True, max_df=10, max_features=None,
             min_df=2, ngram_range=(1, 3), norm='l2', preprocessor=None,
             smooth_idf=True, stop_words=None, strip_accents=None,
             sublinear_tf=False, token_pattern='(?u)\\b\\w\\w+\\b',
             tokenizer=None, use_idf=True, vocabulary=None))], 'classifier__C': 1.0, 'classifier__random_state': None, 'features__counts__min_df': 2, 'features__counts__vocabulary': None, 'classifier__tol': 0.0001, 'classifier__max_iter': 100, 'features__counts__binary': False, 'features__counts__max_features': None, 'features__counts__ngram_range': (1, 3), 'steps': [('features', FeatureUnion(n_jobs=1,
       transformer_list=[('counts', Snowball_TfidfVectorizer(analyzer='word', binary=False, decode_error='strict',
             dtype=<class 'numpy.int64'>, encoding='utf-8',
             input='content', lowercase=True, max_df=10, max_features=None,
             min_df=2, ngram_range=(1, 3), norm='l2', pr...se, token_pattern='(?u)\\b\\w\\w+\\b',
             tokenizer=None, use_idf=True, vocabulary=None))],
       transformer_weights=None)), ('classifier', LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False))], 'classifier__verbose': 0, 'classifier': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), 'features__counts__decode_error': 'strict', 'features__counts': Snowball_TfidfVectorizer(analyzer='word', binary=False, decode_error='strict',
             dtype=<class 'numpy.int64'>, encoding='utf-8',
             input='content', lowercase=True, max_df=10, max_features=None,
             min_df=2, ngram_range=(1, 3), norm='l2', preprocessor=None,
             smooth_idf=True, stop_words=None, strip_accents=None,
             sublinear_tf=False, token_pattern='(?u)\\b\\w\\w+\\b',
             tokenizer=None, use_idf=True, vocabulary=None), 'features__counts__encoding': 'utf-8', 'features__counts__lowercase': True, 'features__counts__sublinear_tf': False, 'classifier__multi_class': 'ovr', 'features__transformer_weights': None, 'features__counts__strip_accents': None, 'classifier__penalty': 'l2', 'classifier__intercept_scaling': 1, 'features__counts__tokenizer': None, 'classifier__n_jobs': 1, 'classifier__solver': 'liblinear', 'memory': None, 'features__counts__use_idf': True, 'features__counts__input': 'content', 'features__counts__dtype': <class 'numpy.int64'>, 'features__counts__stop_words': None, 'classifier__warm_start': False, 'features__counts__smooth_idf': True, 'features__counts__token_pattern': '(?u)\\b\\w\\w+\\b', 'classifier__dual': False}